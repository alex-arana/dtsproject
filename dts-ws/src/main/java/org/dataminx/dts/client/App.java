package org.dataminx.dts.client;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.BeanFactory;
import org.springframework.beans.factory.xml.XmlBeanFactory;
import org.springframework.core.io.ClassPathResource;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;

import org.w3c.dom.Document;

import java.io.File;
import java.io.IOException;

/**
 * Hello world!
 *
 */
public class App
{
	protected final Log logger = LogFactory.getLog(getClass());

    public static void main(String[] args) {
    	BeanFactory factory =
    	    new XmlBeanFactory(new ClassPathResource("dts-servlet.xml"));
    	DataTransferServiceClient client = (DataTransferServiceClient)factory.getBean("dataTransferServiceClient");

    	DocumentBuilderFactory docFactory =
    	      DocumentBuilderFactory.newInstance();
    	App app = new App();

	    try {
			File f = new ClassPathResource("minx-dts.xml").getFile();
			DocumentBuilder builder =
				docFactory.newDocumentBuilder();
			Document dtsJob = builder.parse(f);

	        app.logger.info(client.submitJob(dtsJob));

	    } catch (SAXParseException spe) {
			// Error generated by the parser
			app.logger.error("\n** Parsing error"
					+ ", line " + spe.getLineNumber()
					+ ", uri " + spe.getSystemId());
			app.logger.error("  " + spe.getMessage() );

			// Use the contained exception, if any
			Exception x = spe;
			if (spe.getException() != null)
				x = spe.getException();
			app.logger.error("SAXParseException", x);

	    } catch (SAXException sxe) {
			// Error generated by this application
			// (or a parser-initialization error)
			Exception x = sxe;
			if (sxe.getException() != null)
				x = sxe.getException();
			app.logger.error("SAXException", x);

	    } catch (ParserConfigurationException pce) {
			// Parser with specified options can't be built
			app.logger.error("ParserConfigurationException", pce);
	    } catch (IOException ioe) {
	    	app.logger.error("IOException", ioe);
	    }
    }
}
