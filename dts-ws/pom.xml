<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
           http://maven.apache.org/POM/4.0.0
           http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>minx-dts</artifactId>
    <groupId>${dataminx.group}</groupId>
    <version>${minx-dts.version}</version>
  </parent>

  <name>MINX-DTS WS</name>
  <artifactId>dts-ws</artifactId>
  <packaging>war</packaging>

  <dependencies>
    <dependency>
      <groupId>${dataminx.group}</groupId>
      <artifactId>dts-common</artifactId>
    </dependency>

    <dependency>
      <groupId>${dataminx.group}</groupId>
      <artifactId>dts-schema</artifactId>
    </dependency>

    <dependency>
      <groupId>${dataminx.group}</groupId>
      <artifactId>dts-domain</artifactId>
    </dependency>

    <dependency>
      <groupId>${dataminx.group}</groupId>
      <artifactId>dts-security</artifactId>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>

    <!-- Spring Test -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- TestNG -->
    <!--
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <scope>test</scope>
    </dependency>
    -->

    <dependency>
      <groupId>org.springframework.ws</groupId>
      <artifactId>spring-oxm</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.ws</groupId>
      <artifactId>spring-oxm-tiger</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.ws</groupId>
      <artifactId>spring-ws-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.ws</groupId>
      <artifactId>spring-ws-core-tiger</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.ws</groupId>
      <artifactId>spring-ws-security</artifactId>
    </dependency>

    <!-- JMS -->
    <dependency>
      <groupId>javax.jms</groupId>
      <artifactId>jms</artifactId>
    </dependency>

    <!-- ActiveMQ -->
    <dependency>
      <artifactId>activemq-all</artifactId>
      <groupId>org.apache.activemq</groupId>
      <scope>runtime</scope>
    </dependency>

    <!-- Spring Integration -->
    <dependency>
      <groupId>org.springframework.integration</groupId>
      <artifactId>spring-integration-core</artifactId>
    </dependency>

    <!-- Spring Integration JMS -->
    <dependency>
      <groupId>org.springframework.integration</groupId>
      <artifactId>spring-integration-jms</artifactId>
    </dependency>

    <!-- Spring Integration XML -->
    <dependency>
      <groupId>org.springframework.integration</groupId>
      <artifactId>spring-integration-xml</artifactId>
    </dependency>

    <!-- Jetty -->
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty-java5-threadpool</artifactId>
    </dependency>


    <!-- client stuff... -->
    <dependency>
      <groupId>jdom</groupId>
      <artifactId>jdom</artifactId>
    </dependency>

    <!-- WS-security related libraries -->
    <dependency>
      <groupId>org.apache.ws.commons.schema</groupId>
      <artifactId>XmlSchema</artifactId>
    </dependency>

    <dependency>
      <groupId>com.sun.xml.wsit</groupId>
      <artifactId>xmlsec</artifactId>
    </dependency>

    <dependency>
      <groupId>com.sun.xml.messaging.saaj</groupId>
      <artifactId>saaj-impl</artifactId>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <!--
      Enable resource filters as a workaround to the issue of accidentally uploading Credential details on the test
      files. Using filters is also a good way to avoid overwriting another developers desktop specific settings (ie
      Windows or Unix format used for 'file://')
    -->
    <filters>
      <filter>src/test/filters/filter.properties</filter>
    </filters>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <plugins>
      <!-- Force maven to use the intended context root to be the name of the WAR file -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <warName>${dts-ws.context.root}</warName>
        </configuration>
      </plugin>

      <!--
        Allows us to enable this project as a WTP Eclipse project. There is currently no other way of specifying
        context-root from within maven. You'll always have to go to Project's Properties -> Web Project Settings and
        manually specifying the context root to "/whatever-you-like". This is only needed if you want to use Tomcat
        server running inside Eclipse.
      -->
      <plugin>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <wtpversion>2.0</wtpversion>
          <useProjectReferences>true</useProjectReferences>
          <additionalBuildcommands>
            <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
          </additionalBuildcommands>
          <additionalProjectnatures>
            <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
          </additionalProjectnatures>
        </configuration>
      </plugin>

      <!-- Jetty-Embedded DTS Web Service instance  -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <configuration>
          <mainClass>org.dataminx.dts.main.JettyEmbeddedDtsWebService</mainClass>
          <classpathScope>runtime</classpathScope>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
