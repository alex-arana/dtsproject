<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">
        
  <!-- Enable Spring beans annotation support -->
  <context:annotation-config />

  <!-- Enable automatic classpath scanning -->
  <context:component-scan base-package="org.dataminx.dts" />

  <context:property-placeholder location="file:${dataminx.dir}/dts-bulkcopyjob.properties"/>

  <!--<bean id="applicationProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>file:${dataminx.dir}/dts-bulkcopyjob.properties</value>
      </list>
    </property>
    <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
    <property name="ignoreUnresolvablePlaceholders" value="false" />
    <property name="order" value="1" />
  </bean>-->

  <bean id="jobLauncherTaskExecutor" class="org.springframework.core.task.SyncTaskExecutor" />
  
  <bean id="jobNotificationService" class="org.dataminx.dts.batch.service.LoggingJobNotificationService" />
  
  <!--
     This bean has to be declared outside of the batch-context.xml so that the calling module
     (which most of the time will be dts-workernode) will declare this on its own spring config
     file. doing it this way, we can be sure that the credentialStore will be accessible all the
     time while the calling module is running.     
  -->
  <bean id="credentialStore" class="org.dataminx.dts.common.util.CredentialStoreImpl"/>
  


  <!--
  mixedFilesJobStepAllocator and jobPartitioningStrategy are included in this
  spring ctxt file so that selected tests (e.g.
  VfsMixedFilesJobPartitioningStrategyIntegrationTest) can build a ctxt
  from just this client-context.xml file (which saves having to
  include batch-context.xml in those tests also)
  -->
  <bean id="mixedFilesJobStepAllocator" class="org.dataminx.dts.batch.MixedFilesJobStepAllocator" scope="prototype"/>  
  
  <bean id="jobPartitioningStrategy" class="org.dataminx.dts.batch.AbstractJobPartitioningStrategy">
    <!-- replace the jobStepAllocator implementation here if you want to use a 
         new strategy for partitioning files -->
    <lookup-method  name="createDtsJobStepAllocator" bean="mixedFilesJobStepAllocator"/>
  </bean>
</beans>