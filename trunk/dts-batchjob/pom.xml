<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>minx-dts</artifactId>
    <groupId>${dataminx.group}</groupId>
    <version>${minx-dts.version}</version>
  </parent>

  <name>MINX-DTS Batch Job</name>
  <artifactId>dts-batchjob</artifactId>
  <packaging>jar</packaging>

  <build>
    <!--
      Enable resource filters as a workaround to the issue of accidentally uploading Credential details on the test
      files. Using filters is also a good way to avoid overwriting another developers desktop specific settings (ie
      Windows or Unix format used for 'file://')
    -->
    <filters>
      <filter>src/test/filters/filter.properties</filter>
    </filters>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <wtpversion>2.0</wtpversion>
          <useProjectReferences>true</useProjectReferences>
          <additionalBuildcommands>
            <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
          </additionalBuildcommands>
          <additionalProjectnatures>
            <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
          </additionalProjectnatures>
        </configuration>
      </plugin>
      <!-- unit and integration test declaration -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
            <skip>true</skip>
        </configuration>
        <executions>
          <execution>
            <id>unit-tests</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>false</skip>
              <excludes>
                <exclude>**/*IntegrationTest.java</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>integration-tests</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>false</skip>
              <includes>
                <include>**/*IntegrationTest.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
       
    </plugins>
  </build>
  
  <dependencies>
    <dependency>
      <artifactId>dts-build-tools</artifactId>
      <groupId>${dataminx.group}</groupId>
    </dependency>
    <dependency>
      <artifactId>dts-common</artifactId>
      <groupId>${dataminx.group}</groupId>
    </dependency>
    <dependency>
      <artifactId>dts-security</artifactId>
      <groupId>${dataminx.group}</groupId>
    </dependency>
    
    <!-- comment this dependency temporarily until we start using it -->
    <!--
    <dependency>
      <artifactId>dts-crypto-plugin</artifactId>
      <groupId>org.dataminx.dts.security</groupId>
    </dependency>
    -->
    <dependency>
      <artifactId>dts-schema</artifactId>
      <groupId>${dataminx.group}</groupId>
    </dependency>

    <!-- SL4J -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <!--<version>1.5.5</version>-->
    </dependency>
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
    </dependency>

    <!-- Log4J -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>

    <!-- commons-collections -->
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
    </dependency>

    <!-- commons-lang -->
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>

    <!-- commons-logging -->
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>

    <!-- commons-net -->
    <dependency>
      <groupId>commons-net</groupId>
      <artifactId>commons-net</artifactId>
    </dependency>

    <!-- Spring Framework -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring</artifactId>
    </dependency>

    <!-- Spring Test -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
    </dependency>

    <!-- Spring OXM -->
    <dependency>
      <groupId>org.springframework.ws</groupId>
      <artifactId>spring-oxm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.ws</groupId>
      <artifactId>spring-oxm-tiger</artifactId>
    </dependency>

    <!-- Spring Batch -->
    <dependency>
      <groupId>org.springframework.batch</groupId>
      <artifactId>org.springframework.batch.core</artifactId>
    </dependency>
    <!--
    Not adding the following pom dependency for batch.infrastructure causes the
    following transitive depdendency warning when doing a 'mvn dependency:analyze'
    (of course, this dependency declaration would need an accompanying
    definition for batch.infrastructure within the parent pom). In this case,
    i think its ok not to define this dependency here as this will be included
    as a transitive dependency in spring batch. 
    ...
    [WARNING] Used undeclared dependencies found:
    [WARNING]    org.springframework.batch:org.springframework.batch.infrastructure:jar:2.0.4.RELEASE:compile
    <dependency>
      <groupId>org.springframework.batch</groupId>
      <artifactId>org.springframework.batch.infrastructure</artifactId>
    </dependency>
    -->
    
    <!-- Spring Batch Integration -->
    <dependency>
      <groupId>org.springframework.batch</groupId>
      <artifactId>spring-batch-integration</artifactId>
    </dependency>

    <!-- JMS -->
    <dependency>
      <groupId>javax.jms</groupId>
      <artifactId>jms</artifactId>
    </dependency>

    <!-- commons-vfs-grid -->
    <dependency>
      <groupId>commons-vfs-grid</groupId>
      <artifactId>commons-vfs-grid</artifactId>
    </dependency>

    <!-- commons-vfs -->
    <!--<dependency>
      <groupId>commons-vfs</groupId>
      <artifactId>commons-vfs</artifactId>
    </dependency>-->

    <dependency>
      <groupId>org.apache.xmlbeans</groupId>
      <artifactId>xmlbeans</artifactId>
    </dependency>

    <!-- JUnit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    
    <!-- Mockito -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>

    <!-- TestNG -->
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>${testng.version}</version>
      <scope>test</scope>
      <classifier>jdk15</classifier>
    </dependency>

    <!-- Java Secure Channel JSCh -->
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- Jettison -->
    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- XStream -->
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- MySQL JDBC driver -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- HSQLDB JDBC Driver -->
    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- POSTGRES JDBC Driver -->
    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>


    <!-- C3P0 -->
    <dependency>
      <groupId>c3p0</groupId>
      <artifactId>c3p0</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- commons-httpclient -->
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- commons-io -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>test</scope>
    </dependency>

    <!--
        The following security libraries will need to be commented out from the
        respective DTS module pom files if we are to deploy the following DTS
        modules (ws, workernode, portal) on a single web container

        TODO: decide on how shared/unshared security libraries can be dealt with
        if we are going to support deployment of the DTS modules in a single or
        multiple web containers.
    -->
    <dependency>
      <groupId>external.jglobus</groupId>
      <artifactId>cryptix32</artifactId>
    </dependency>
    <dependency>
      <groupId>external.jglobus</groupId>
      <artifactId>cryptix-asn1</artifactId>
    </dependency>
    <dependency>
      <groupId>external.jglobus</groupId>
      <artifactId>cryptix</artifactId>
    </dependency>
    <dependency>
      <groupId>external.jglobus</groupId>
      <artifactId>puretls</artifactId>
    </dependency>
    <dependency>
      <groupId>external.jglobus</groupId>
      <artifactId>cog-jglobus</artifactId>
    </dependency>
    <dependency>
      <groupId>bouncycastle</groupId>
      <artifactId>bcprov-jdk16</artifactId>
    </dependency>

    <!-- Proxy Light -->
    <dependency>
        <groupId>au.org.arcs.auth</groupId>
        <artifactId>simpleProxyLib</artifactId>
    </dependency>

    <!-- Unitils -->
    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ognl</groupId>
      <artifactId>ognl</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.objenesis</groupId>
      <artifactId>objenesis</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm-tree</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm-analysis</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymockclassextension</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>