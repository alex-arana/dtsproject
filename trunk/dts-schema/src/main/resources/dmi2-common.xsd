<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="http://schemas.dataminx.org/dts/2009/07/dmi2-common"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://www.w3.org/2005/08/addressing"
   xmlns:dmi="http://schemas.dataminx.org/dts/2009/07/dmi2-common" elementFormDefault="qualified">


<!--
    xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" elementFormDefault="qualified" version="1"
    
    <xsd:import
        namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"
        schemaLocation="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"/>
    <xsd:import namespace="http://www.w3.org/2005/08/addressing"
        schemaLocation="http://www.w3.org/2006/03/addressing/ws-addr.xsd"/>
-->

    <xsd:element name="MyProxyToken" type="dmi:MyProxyTokenType"/>
    <!--
        <xsd:element name="OtherCredentialToken" type="dmi:OtherCredentialTokenType"/>
    <xsd:element name="Credential" type="dmi:CredentialType"/>
    <xsd:element name="Credentials" type="dmi:CredentialsType"/>
    -->

    <xsd:element name="JobResourceKey" type="xsd:anyURI"/>
    <xsd:element name="URIProperties" abstract="true"/>
    <xsd:element name="IrodsURIProperties" type="dmi:IrodsURIPropertiesType"
        substitutionGroup="dmi:URIProperties"/>
    <xsd:element name="GridFtpURIProperties" type="dmi:GridFtpURIPropertiesType"
        substitutionGroup="dmi:URIProperties"/>
    <xsd:element name="SrbURIProperties" type="dmi:SrbURIPropertiesType"
        substitutionGroup="dmi:URIProperties"/>
    <xsd:element name="PortRange" type="dmi:PortRangeType"/>







    <!--========================================================================-->


    <xsd:element name="idRef">
        <xsd:complexType>
            <xsd:attribute name="idref" type="xsd:IDREF" use="required"/>
        </xsd:complexType>
    </xsd:element>
       
    

    <xsd:complexType name="BulkDataCopyType">
        <xsd:sequence>  
            <xsd:element name="Resources" type="dmi:ResourcesType" minOccurs="0" maxOccurs="1"/>
            <xsd:element ref="dmi:BulkCopyRequirements" minOccurs="0" maxOccurs="1"/>             
            <xsd:element ref="dmi:DataCopy" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>
    <xsd:element name="BulkDataCopy" type="dmi:BulkDataCopyType"/>


    <xsd:complexType name="ResourcesType">
        <xsd:sequence>
            <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:anyAttribute processContents="lax"/>
    </xsd:complexType> 


    <xsd:complexType name="DataCopyType">
        <xsd:sequence>
            <xsd:choice>
                <xsd:element name="Source" type="dmi:DataLocationsType"/>
                <xsd:element ref="dmi:idRef"/>
            </xsd:choice>
            <xsd:choice>
                <xsd:element name="Sink" type="dmi:DataLocationsType"/>
                <xsd:element ref="dmi:idRef"/>
            </xsd:choice>
            <xsd:choice>
                <xsd:element ref="dmi:CopyRequirements" minOccurs="0" maxOccurs="1"/>
                <xsd:element ref="dmi:idRef"/>
            </xsd:choice>                
            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:ID" use="optional"/> 
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>
    <xsd:element name="DataCopy" type="dmi:DataCopyType"/>


   <xsd:complexType name="CopyRequirementsType">
      <xsd:sequence>
          <xsd:element ref="dmi:CreationFlag" minOccurs="0" maxOccurs="1"/>
          <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
       <xsd:attribute name="id" type="xsd:ID" use="optional"/> 
       <xsd:anyAttribute namespace="##other" processContents="lax"/>
   </xsd:complexType>
    <xsd:element name="CopyRequirements" type="dmi:CopyRequirementsType"/>

    <xsd:simpleType name="CreationFlagEnumeration">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="overwrite"/>
            <xsd:enumeration value="append"/>
            <xsd:enumeration value="dontOverwrite"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:element name="CreationFlag" type="dmi:CreationFlagEnumeration"/>

    <!-- 
        dmi:DataLocations
    -->
    <xsd:complexType name="DataLocationsType">
        <xsd:annotation>
            <xsd:documentation>
                This element serves as a container aggregating one or more
                dmi:Data elements. This container item MUST appear in the
                wsa:Metadata section of the SourceDEPR and SinkDEPR as defined
                in the OGSA-DMI Functional Specification 1.0.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="Data" type="dmi:DataType" maxOccurs="unbounded"/>
            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:ID" use="optional"/>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>
    <!--<xsd:element name="DataLocations" type="dmi:DataLocationsType"/>-->
    <xsd:element name="Source" type="dmi:DataLocationsType"/>
    <xsd:element name="Sink" type="dmi:DataLocationsType"/>    

    <!--
        dmi:Data
    -->
    <xsd:complexType name="DataType">
        <xsd:annotation>
            <xsd:documentation>
                The dmi:Data element describes for each data transfer protocol
                (using the normalised values defined for dmi:SupportedProtocol)
                the specific information that must be used to access the data.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="DataUrl" type="xsd:anyURI"/>
            <xsd:element name="ProtocolUri" type="xsd:anyURI" minOccurs="0" maxOccurs="1"/>
            <xsd:choice>
                <xsd:element ref="dmi:URIProperties" minOccurs="0"  maxOccurs="1"/>
                <xsd:element ref="dmi:idRef" minOccurs="0" maxOccurs="1"/>
            </xsd:choice>
            <xsd:element name="Credentials" type="dmi:CredentialsType" minOccurs="0"  maxOccurs="1"/>                           
            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>

    <!--
        dmi:Credentials
    -->
    <xsd:complexType name="CredentialsType">
        <xsd:annotation>
            <xsd:documentation>
                Credentials in OGSA-DMI are used to describe the security
                related information elements that are necessary to invoke a
                data transfer using a specific transport protocol. This element 
                does not define any normative structure so that OGSA-DMI can be
                orthogonally composed with security infrastructures.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
             <xsd:any minOccurs="0" maxOccurs="unbounded"/>              
        </xsd:sequence>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>





    <xsd:complexType name="MyProxyTokenType">
        <xsd:annotation>
            <xsd:documentation>
                Information that needs to be provided to get a user's credential
                from MyProxy
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="MyProxyUsername" type="xsd:string"/>
            <xsd:element name="MyProxyPassword" type="xsd:string"/>
            <xsd:element name="MyProxyServer" type="xsd:string"/>
            <xsd:element name="MyProxyPort" type="xsd:int" default="7512"/>
            <xsd:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:ID" use="optional"/>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>



    <!--
    <xsd:complexType name="OtherCredentialTokenType">
        <xsd:annotation>
            <xsd:documentation>
                A wrapper for credential tokens that are not specified in the
                Credential element. This is also a workaround so we don't get this
                error message

                cos-nonambig: wsse:UsernameToken and WC During validation against this
                schema, ambiguity would be created for those two particles.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>



    <xsd:complexType name="CredentialType">
        <xsd:choice>
            <xsd:element ref="wsse:UsernameToken"/>
            <xsd:element ref="dmi:MyProxyToken"/>
            <xsd:element ref="dmi:OtherCredentialToken"/>
        </xsd:choice>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>
    -->



    <xsd:complexType name="GridFtpURIPropertiesType">
        <xsd:sequence>
            <xsd:element name="PortRange" type="dmi:PortRangeType" minOccurs="0"/>
            <xsd:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:ID" use="optional"/>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>

    <xsd:complexType name="PortRangeType">
        <xsd:sequence>
            <xsd:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:ID" use="optional"/>
        <xsd:attribute name="RangeMin" type="xsd:int" use="required"/>
        <xsd:attribute name="RangeMax" type="xsd:int" use="required"/>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>


    <xsd:complexType name="SrbURIPropertiesType">
        <xsd:sequence>
            <xsd:element name="MdasDomainHome" type="xsd:string" minOccurs="1"/>
            <xsd:element name="MdasCollectionHome" type="xsd:string" minOccurs="1"/>
            <xsd:element name="ServerDN" type="xsd:string" minOccurs="0"/>
            <xsd:element name="DefaultResource" type="xsd:string" minOccurs="0"/>
            <!-- <xsd:element name="PortRange" type="dmi2:PortRangeType" minOccurs="0" />-->
            <xsd:element name="McatZone" type="xsd:string" minOccurs="0"/>
            <xsd:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:ID" use="optional"/>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>

    <xsd:complexType name="IrodsURIPropertiesType">
        <xsd:sequence>
            <xsd:element name="IrodsHome" type="xsd:string" minOccurs="0"/>
            <xsd:element name="IrodsCwd" type="xsd:string" minOccurs="0"/>
            <xsd:element name="IrodsServerDN" type="xsd:string" minOccurs="0"/>
            <xsd:element name="IrodsDefaultResource" type="xsd:string" minOccurs="0"/>
            <xsd:element name="IrodsZone" type="xsd:string" minOccurs="1"/>
            <xsd:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:ID" use="optional"/>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>




    <!-- 
        dmi:TransferRequirements
    -->
    <xsd:complexType name="BulkCopyRequirementsType">
        <xsd:annotation>
            <xsd:documentation>
                A client may specify a number of constraints to the data
                transfer such as start and end time (e.g. when resource
                reservations have been made).
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="StartNotBefore" type="xsd:dateTime" minOccurs="0"/>
            <xsd:element name="EndNoLaterThan" type="xsd:dateTime" minOccurs="0" />
            <xsd:element name="StayAliveTime" type="xsd:unsignedInt" minOccurs="0"/>
            <xsd:element name="MaxAttempts" type="xsd:unsignedInt" minOccurs="0"/>
            <xsd:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>
    <xsd:element name="BulkCopyRequirements" type="dmi:BulkCopyRequirementsType"/>
    
    
    
</xsd:schema>
