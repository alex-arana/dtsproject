<?xml version="1.0" encoding="UTF-8"?>
<!--
  The OGF takes no position regarding the validity or scope of any
  intellectual property or other rights that might be claimed to
  pertain to the implementation or use of the technology described
  in this document or the extent to which any license under such
  rights might or might not be available; neither does it represent
  that it has made any effort to identify any such rights.  Copies
  of claims of rights made available for publication and any
  assurances of licenses to be made available, or the result of an
  attempt made to obtain a general license or permission for the use
  of such proprietary rights by implementers or users of this
  specification can be obtained from the OGF Secretariat.

  The OGF invites any interested party to bring to its attention any
  copyrights, patents or patent applications, or other proprietary
  rights which may cover technology that may be required to practice
  this recommendation.  Please address the information to the OGF
  Executive Director.

  This document and the information contained herein is provided on
  an "As Is" basis and the OGF disclaims all warranties, express or
  implied, including but not limited to any warranty that the use
  of the information herein will not infringe any rights or any
  implied warranties of merchantability or fitness for a particular
  purpose.

  Copyright (C) Open Grid Forum (2008). All Rights Reserved.

  This document and translations of it may be copied and furnished to
  others, and derivative works that comment on or otherwise explain
  it or assist in its implementation may be prepared, copied, published
  and distributed, in whole or in part, without restriction of any
  kind, provided that the above copyright notice and this paragraph are
  included on all such copies and derivative works. However, this
  document itself may not be modified in any way, such as by removing
  the copyright notice or references to the OGF or other organizations,
  except as needed for the purpose of developing Grid Recommendations
  in which case the procedures for copyrights defined in the OGF
  Document process must be followed, or as required to translate it
  into languages other than English.

  The limited permissions granted above are perpetual and will not be
  revoked by the OGF or its successors or assignees.
-->
<schema
targetNamespace="http://schemas.ogf.org/dmi/2009/09/dmi/rendering/wrapped"
xmlns="http://www.w3.org/2001/XMLSchema"
xmlns:dmi="http://schemas.ogf.org/dmi/2008/05/dmi"
xmlns:dmi-wrapped="http://schemas.ogf.org/dmi/2009/09/dmi/rendering/wrapped"
xmlns:wsa="http://www.w3.org/2005/08/addressing" elementFormDefault="qualified">


  <!-- ======================================================== -->
  <!-- ==                                                    == -->
  <!-- == OGSA DMI WS-I Message model                        == -->
  <!-- ==                                                    == -->
  <!-- == This XML Schema document defines the XML elements  == -->
  <!-- == necessary to define WS-I compliant WS operations   == -->
  <!-- == and messages.                                      == -->
  <!-- ======================================================== -->

  <import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://www.w3.org/2006/03/addressing/ws-addr.xsd"/>

  <import namespace="http://schemas.ogf.org/dmi/2008/05/dmi" schemaLocation="../dmi.xsd"/>


  <!-- ============================================ -->
  <!-- == Factory / Instance Fault message model == -->
  <!-- ============================================ -->

  <!-- Common type for all OGSA-DMI specific faults -->
  <complexType name="DMIFaultType">
    <sequence>
      <element name="Message" type="string"/>
      <element name="Timestamp" type="dateTime"/>
      <any namespace="#other" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>

  <!-- UnsatisfiableRequestOptionsFault message -->
  <element name="UnsatisfiableRequestOptionsFault" type="dmi-wrapped:UnsatisfiableRequestOptionsFaultType"/>
  <complexType name="UnsatisfiableRequestOptionsFaultType">
    <complexContent>
      <extension base="dmi-wrapped:DMIFaultType"/>
    </complexContent>
  </complexType>

  <!-- NoTransferProtocolAgreementFault message -->
  <element name="NoTransferProtocolAgreementFault" type="dmi-wrapped:NoTransferProtocolAgreementFaultType"/>
  <complexType name="NoTransferProtocolAgreementFaultType">
    <complexContent>
      <extension base="dmi-wrapped:DMIFaultType"/>
    </complexContent>
  </complexType>

  <!-- IncorrectStateFault message -->
  <element name="IncorrectStateFault" type="dmi-wrapped:IncorrectStateFaultType"/>
  <complexType name="IncorrectStateFaultType">
    <complexContent>
      <extension base="dmi-wrapped:DMIFaultType"/>
    </complexContent>
  </complexType>

  <!-- FailedStateTransitionFault message -->
  <element name="FailedStateTransitionFault" type="dmi-wrapped:FailedStateTransitionFaultType"/>
  <complexType name="FailedStateTransitionFaultType">
    <complexContent>
      <extension base="dmi-wrapped:DMIFaultType"/>
    </complexContent>
  </complexType>

  <!-- RequestedStateNotSupportedFault message -->
  <element name="RequestedStateNotSupportedFault" type="dmi-wrapped:RequestedStateNotSupportedFaultType"/>
  <complexType name="RequestedStateNotSupportedFaultType">
    <complexContent>
      <extension base="dmi-wrapped:DMIFaultType"/>
    </complexContent>
  </complexType>

  <!-- CustomFault message -->
  <element name="CustomFault" type="dmi-wrapped:CustomFaultType"/>
  <complexType name="CustomFaultType">
    <complexContent>
      <extension base="dmi-wrapped:DMIFaultType"/>
    </complexContent>
  </complexType>

  <!-- TransferProtocolNotInstantiatableFault message -->
  <element name="TransferProtocolNotInstantiatableFault" type="dmi-wrapped:TransferProtocolNotInstantiatableFaultType"/>
  <complexType name="TransferProtocolNotInstantiatableFaultType">
    <complexContent>
      <extension base="dmi-wrapped:DMIFaultType">
        <sequence>
          <element name="Protocol" type="anyURI"/>
          <element name="SourceDEPR" type="wsa:EndpointReferenceType" minOccurs="0"/>
          <element name="SinkDEPR" type="wsa:EndpointReferenceType" minOccurs="0"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>


  <!-- ================================================= -->
  <!-- == Data Transfer Service related message model == -->
  <!-- ================================================= -->

  <!--
    Operation "GetServiceAttributesDocument"
    =========================================
    Input:  n/a
    Output: <dmi:ServiceAttributes />
    Faults: n/a
  -->
  <!-- Request Message -->
  <element name="GetServiceAttributesDocumentRequestMessage"/>
  <!-- Response Message -->
  <element name="GetServiceAttributesDocumentResponseMessage" type="dmi-wrapped:GetServiceAttributesDocumentResponseType"/>
  <complexType name="GetServiceAttributesDocumentResponseType">
    <sequence>
      <element name="ServiceAttributes" type="dmi-wrapped:ServiceAttributesType"/>
    </sequence>
  </complexType>


  <!-- Supplementary elements -->
  <complexType name="ServiceAttributesType">
    <sequence>
      <element name="SupportedProtocol" type="dmi:SupportedProtocolType" maxOccurs="unbounded"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>

  <!--
    Operation "SubmitWrappedDataTransferRequest"
    =====================================
    Input:  <dmi-wrapped:GetWrappedDataTransferInstanceRequestMessage>
    Output: <dmi-wrapped:GetWrappedDataTransferInstanceResponseMessage />
    Faults: <dmi:UnsatisfiableRequestOptionsFault />
            <dmi:NoTransferProtocolAgreementFault />
            <dmi:CustomFault />
  -->
  <!-- Request Message -->
  <element name="SubmitWrappedDataTransferRequestMessage" type="dmi-wrapped:GetWrappedDataTransferInstanceRequestType"/>
  <complexType name="GetWrappedDataTransferInstanceRequestType">
    <sequence>
        <!--
        define optional start element so that you don't have to submit an extra
        dmi-wrapped:StartRequestMessage to the service service
        -->
        <element name="Start" minOccurs="0" maxOccurs="1"/>
        <element name="WrappedSourceSinkDEPR" type="dmi-wrapped:GetDataTransferInstanceRequestType" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
  </complexType>

  <complexType name="GetDataTransferInstanceRequestType">
    <sequence>
      <element name="SourceDEPR" type="wsa:EndpointReferenceType"/>
      <element name="SinkDEPR" type="wsa:EndpointReferenceType"/>
      <element name="TransferRequirements" type="dmi:TransferRequirementsType"/>
    </sequence>
  </complexType>

  <!-- Response Message -->
  <element name="GetWrappedDataTransferInstanceResponseMessage" type="dmi-wrapped:GetWrappedDataTransferInstanceResponseType"/>
  <complexType name="GetWrappedDataTransferInstanceResponseType">
    <sequence>
      <element ref="dmi-wrapped:JobID"/>
    </sequence>
  </complexType>







  <!-- ================================================== -->
  <!-- == Data Transfer Instance related message model == -->
  <!-- ================================================== -->

  <!--
    Operation "GetInstanceAttributesDocument"
    =========================================
    Input:  JobID
    Output: <dmi:InstanceAttributes />
    Faults: n/a
  -->
  <!-- Request Message -->
  <element name="GetWrappedInstanceAttributesDocumentRequestMessage">
    <complexType>
      <sequence>
        <element ref="dmi-wrapped:JobID"/>
      </sequence>
    </complexType>
  </element> 
  <!-- Response Message -->
  <element name="GetWrappedInstanceAttributesDocumentResponseMessage" type="dmi-wrapped:GetInstanceAttributesDocumentResponseType"/>
  <complexType name="GetInstanceAttributesDocumentResponseType">
    <sequence>
        <!--
        note, the InstanceAttributes doc represents the whole 'wrapped' transfer
        which can consist of multiple sub-transfers. Consequently, attributes
        such as TotalDataSize, BytesTransferred, StartTime, Attepts etc are
        calculated across all the sub-transfers.
        -->
        <element name="InstanceAttributes" type="dmi-wrapped:InstanceAttributesType"/>
    </sequence>
  </complexType>



  <!-- Supplementary elements -->

  <element name="JobID" type="string"/>

  <complexType name="InstanceAttributesType">
    <sequence>
      <element ref="dmi:StartTime" minOccurs="0"/>
      <element ref="dmi:State"/>
      <element ref="dmi:CompletionTime" minOccurs="0"/>
      <element ref="dmi:TotalDataSize" minOccurs="0"/>
      <element ref="dmi:BytesTransferred" minOccurs="0"/>
      <element ref="dmi:Attempts"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>

  <!--
    Operation "GetStatus"
    ======================
    Input:  JobID
    Output: <dmi:Status />
    Faults: n/a
  -->
  <!-- Request Message -->
  <element name="GetStatusRequestMessage">
    <complexType>
      <sequence>
        <element ref="dmi-wrapped:JobID"/>
      </sequence>
    </complexType>
  </element>
  <!-- Response Message -->
  <element name="GetStatusResponseMessage" type="dmi-wrapped:GetStatusResponseType"/>
  <complexType name="GetStatusResponseType">
    <sequence>
      <element ref="dmi:State"/>
    </sequence>
  </complexType>

  <!--
    Operation "Start"
    ======================
    Input:  JobID
    Output: n/a
    Faults: <dmi:IncorrectStateFault />
            <dmi:FailedStateTransitionFault />
            <dmi:TransferProtocolNotInstantiatableFault />
            <dmi:CustomFault />
  -->
  <!-- Request Message -->
  <element name="StartRequestMessage">
    <complexType>
      <sequence>
        <element ref="dmi-wrapped:JobID"/>
      </sequence>
    </complexType>
  </element>
  <!-- Response Message -->
  <element name="StartResponseMessage"/>

  <!--
    Operation "Activate"
    ======================
    Input:  JobID
    Output: n/a
    Faults: <dmi:IncorrectStateFault />
            <dmi:FailedStateTransitionFault />
            <dmi:CustomFault />
  -->
  <!-- Request Message -->
  <element name="ActivateRequestMessage">
    <complexType>
      <sequence>
        <element ref="dmi-wrapped:JobID"/>
      </sequence>
    </complexType>
  </element>
  <!-- Response Message -->
  <element name="ActivateResponseMessage"/>

  <!--
    Operation "stop"
    ======================
    Input:  JobID
    Output: n/a
    Faults: <dmi:IncorrectStateFault />
            <dmi:FailedStateTransitionFault />
            <dmi:CustomFault />
  -->
  <!-- Request Message -->
  <element name="StopRequestMessage">
    <complexType>
      <sequence>
        <element ref="dmi-wrapped:JobID"/>
      </sequence>
    </complexType>
  </element>
  <!-- Response Message -->
  <element name="StopResponseMessage"/>

  <!--
    Operation "restart"
    ======================
    Input:  JobID
    Output: n/a
    Faults: <dmi:IncorrectStateFault />
            <dmi:FailedStateTransitionFault />
            <dmi:CustomFault />
  -->
  <!-- Request Message -->
  <element name="ResumeRequestMessage">
    <complexType>
      <sequence>
        <element ref="dmi-wrapped:JobID"/>
      </sequence>
    </complexType>
  </element>
  <!-- Response Message -->
  <element name="ResumeResponseMessage"/>

  <!--
    Operation "suspend"
    ======================
    Input:  JobID
    Output: n/a
    Faults: <dmi:IncorrectStateFault />
            <dmi:FailedStateTransitionFault />
            <dmi:CustomFault />
  -->
  <!-- Request Message -->
  <element name="SuspendRequestMessage">
    <complexType>
      <sequence>
        <element ref="dmi-wrapped:JobID"/>
      </sequence>
    </complexType>
  </element>
  <!-- Response Message -->
  <element name="SuspendResponseMessage"/>

</schema>